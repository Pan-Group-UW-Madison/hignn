FROM nvidia/cuda:11.8.0-cudnn8-devel-ubuntu20.04

SHELL ["/bin/bash", "-c"]
WORKDIR /local

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

COPY dependencies.focal.nvidia.sh /opt/dependencies.focal.sh
RUN apt-get update && \
    /opt/dependencies.focal.sh && \
    rm -rf /var/lib/apt/lists/*

COPY common.focal.sh /opt/common.focal.sh
RUN /opt/common.focal.sh && rm -f /opt/common.focal.sh

ENV LC_ALL=C
ENV DEBIAN_FRONTEND=noninteractive
ENV PATH=/opt/nvidia/nsight-compute/2022.3.0/:$PATH

# GPU-aware MPI
RUN wget https://www.open-mpi.org//software/ompi/v4.1/downloads/openmpi-4.1.5.tar.gz && \
    tar -xvf openmpi-4.1.5.tar.gz && \
    cd openmpi-4.1.5 && \
    ./configure --with-cuda=/usr/local/cuda --prefix=/opt/openmpi --enable-orterun-prefix-by-default && \
    make -j$(nproc) && \
    make install && \
    cd .. && \
    rm -rf openmpi-4.1.5.tar.gz openmpi-4.1.5

# Kokkos
ENV OMPI_CXX=/opt/kokkos/bin/nvcc_wrapper
RUN cd /opt/ && \
    git clone https://github.com/kokkos/kokkos.git kokkos-source && \
    cd kokkos-source && \
    git checkout release-candidate-4.2.01 && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_INSTALL_PREFIX=/opt/kokkos -D Kokkos_ENABLE_CUDA=On -D Kokkos_CUDA_DIR=/usr/local/cuda -D Kokkos_ARCH_ADA89=On -D Kokkos_ENABLE_OPENMP=On -D CMAKE_CXX_STANDARD=17 -D BUILD_SHARED_LIBS=On .. && \
    make -j$(nproc) && \
    make install && \
    cd /opt/ && \
    rm -rf kokkos-source

# PyTorch and LibTorch with CUDA 11.8 as PyTorch Geometric requires CUDA 11.8
RUN pip3 install --no-cache-dir torch==2.2.1 torchvision==0.17.0 torchaudio==2.2.1 --index-url https://download.pytorch.org/whl/cu118
RUN wget https://download.pytorch.org/libtorch/cu118/libtorch-cxx11-abi-shared-with-deps-2.2.1%2Bcu118.zip && \
    unzip libtorch-cxx11-abi-shared-with-deps-2.2.1+cu118.zip && \
    mv libtorch /opt/libtorch && \
    rm -rf libtorch-cxx11-abi-shared-with-deps-2.2.1+cu118.zip libtorch

# PyTorch Geometric
RUN pip3 install --no-cache-dir torch_geometric pyg_lib torch_scatter torch_sparse torch_cluster torch_spline_conv -f https://data.pyg.org/whl/torch-2.2.1+cu118.html

# environment variables
ENV PATH="${PATH}:/opt/openmpi/bin"
ENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1
ENV OMPI_ALLOW_RUN_AS_ROOT=1
ENV Kokkos_PATH=/opt/kokkos
ENV LibTorch_PATH=/opt/libtorch

ENV OMP_PROC_BIND=spread
ENV OMP_PLACES=sockets
ENV OMP_NUM_THREADS=10

RUN pip3 install --no-cache-dir mpi4py h5py
RUN service ssh start

# setup ssh
ENV USER mpirun

ENV DEBIAN_FRONTEND=noninteractive \
    HOME=/home/${USER}

RUN echo 'root:${USER}' | chpasswd
RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

ENV NOTVISIBLE "in users profile"
RUN echo "export VISIBLE=now" >> /etc/profile

# ------------------------------------------------------------
# Add an 'mpirun' user
# ------------------------------------------------------------

RUN adduser --disabled-password --gecos "" ${USER} && \
    echo "${USER} ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# ------------------------------------------------------------
# Set-Up SSH with key
# ------------------------------------------------------------

ENV SSHDIR ${HOME}/.ssh/

RUN mkdir -p ${SSHDIR}

ADD ssh/config ${SSHDIR}/config
ADD ssh/id_rsa.mpi ${SSHDIR}/id_rsa
ADD ssh/id_rsa.mpi.pub ${SSHDIR}/id_rsa.pub
ADD ssh/id_rsa.mpi.pub ${SSHDIR}/authorized_keys

RUN chmod -R 600 ${SSHDIR}* && \
    chown -R ${USER}:${USER} ${SSHDIR}

# ------------------------------------------------------------
# Configure OpenMPI
# ------------------------------------------------------------

USER root

RUN rm -fr ${HOME}/.openmpi && mkdir -p ${HOME}/.openmpi
ADD default-mca-params.conf ${HOME}/.openmpi/mca-params.conf
RUN chown -R ${USER}:${USER} ${HOME}/.openmpi

# ------------------------------------------------------------
# Copy MPI4PY example scripts
# ------------------------------------------------------------

ENV TRIGGER 1

EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]

# VTK
RUN cd /opt/ && \
    git clone https://gitlab.kitware.com/vtk/vtk.git && \
    cd vtk && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE:STRING=Release -D CMAKE_INSTALL_PREFIX=/opt/vtk-build/ -D VTK_MODULE_ENABLE_VTK_IOHDF:STRING=YES .. && \
    make -j$(nproc) && make install && \
    cd /opt && \
    rm -rf /opt/vtk

ENV VTK_DIR=/opt/vtk-build/lib/cmake/vtk-9.1

# clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*